<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rubberduck.API</name>
    </assembly>
    <members>
        <member name="T:Rubberduck.API.Authorization.GitHubAuthorizeAttribute">
            <summary>
            Requires GitHub authentication and membership with rubberduck-vba organization.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Authorization.GitHubAuthorizeAttribute.#ctor">
            <summary>
            Requires GitHub authentication and membership with rubberduck-vba organization.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Authorization.GitHubAuthorizeAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Called early in the filter pipeline to confirm request is authorized.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Authorization.GitHubAuthorizeAttribute.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Called early in the filter pipeline to confirm request is authorized.
            </summary>
        </member>
        <member name="T:Rubberduck.API.ConfigureSwaggerGenOptions">
            <summary>
            Configures Swagger generation options.
            </summary>
        </member>
        <member name="M:Rubberduck.API.ConfigureSwaggerGenOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <summary>
            Invoked to configure a SwaggerGenOptions instance.
            </summary>
        </member>
        <member name="T:Rubberduck.API.Controllers.Authenticated.AdminController">
            <summary>
            Exposes endpoints providing an interface to manipulate the website's dynamic content.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.Authenticated.AdminController.#ctor(Microsoft.Extensions.Logging.ILogger{Rubberduck.API.Controllers.Authenticated.AdminController},Rubberduck.ContentServices.Service.Abstract.IContentService,Rubberduck.API.Services.Abstract.IXmlDocServices)">
            <summary>
            Creates a controller that exposes endpoints providing an interface to manipulate the website's dynamic content.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.Authenticated.AdminController.SaveAsync(Rubberduck.Model.Entities.Feature)">
            <summary>
            Creates a new feature (or sub-feature), or updates an existing one.
            </summary>
            <param name="dto">The feature (or sub-feature) to save.</param>
        </member>
        <member name="M:Rubberduck.API.Controllers.Authenticated.AdminController.DeleteAsync(Rubberduck.Model.Entities.Feature)">
            <summary>
            Deletes the specified feature (or sub-feature).
            </summary>
            <param name="dto">The feature (or sub-feature) to delete.</param>
        </member>
        <member name="M:Rubberduck.API.Controllers.Authenticated.AdminController.SaveAsync(Rubberduck.Model.Entities.FeatureItem)">
            <summary>
            Creates a new feature item, or updates an existing one.
            </summary>
            <param name="dto">The feature item to save.</param>
        </member>
        <member name="M:Rubberduck.API.Controllers.Authenticated.AdminController.DeleteAsync(Rubberduck.Model.Entities.FeatureItem)">
            <summary>
            Deletes the specified feature item.
            </summary>
            <param name="dto">The feature item to delete.</param>
        </member>
        <member name="M:Rubberduck.API.Controllers.Authenticated.AdminController.UpdateXmlDocContentAsync">
            <summary>
            Gets the latest release and pre-release tags, downloads xmldoc assets, and processes them.
            </summary>
        </member>
        <member name="T:Rubberduck.API.Controllers.AuthController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.AuthController.Login(System.String)">
            <summary>
            Login with GitHub.
            </summary>
        </member>
        <member name="T:Rubberduck.API.Controllers.HealthController">
            <summary>
            A controller that exposes an endpoint that runs quick checks periodically.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.HealthController.#ctor(Microsoft.Extensions.Logging.ILogger{Rubberduck.API.Controllers.HealthController},Rubberduck.ContentServices.Service.Abstract.IContentService,RubberduckServices.Abstract.IIndenterService,Rubberduck.API.Services.Abstract.IGitHubDataServices)">
            <summary>
            Creates a controller that exposes an endpoint that runs quick checks periodically.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.HealthController.CheckAsync">
            <summary>
            Runs a number of internal quick checks to ensure base services are operational.
            </summary>
        </member>
        <member name="T:Rubberduck.API.Controllers.PublicController">
            <summary>
            Exposes endpoints providing the website's dynamic content.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.PublicController.#ctor(Microsoft.Extensions.Logging.ILogger{Rubberduck.API.Controllers.PublicController},Rubberduck.ContentServices.Service.Abstract.IContentService,RubberduckServices.Abstract.IIndenterService)">
            <summary>
            Creates a controller that exposes endpoints providing the website's dynamic content.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.PublicController.GetFeaturesAsync">
            <summary>
            Gets all top-level features, along with their sub-features and feature items.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.PublicController.GetFeatureAsync(System.String)">
            <summary>
            Gets a feature or sub-feature along with its sub-features and feature items.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.PublicController.GetFeatureItem(System.String)">
            <summary>
            Gets the specified feature item, including its examples and their respective modules.
            </summary>
            <param name="name">The unique name of the feature item to get.</param>
        </member>
        <member name="M:Rubberduck.API.Controllers.PublicController.GetLatestTagsAsync">
            <summary>
            Gets the latest release and prerelease tags.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Controllers.PublicController.IndentAsync(Rubberduck.Model.IndenterViewModel)">
            <summary>
            Gets the supplied code, indented as per specified settings.
            </summary>
            <param name="viewModel">The indenter request details.</param>
            <returns>An array of string, each element being an indented physical line of code.</returns>
        </member>
        <member name="T:Rubberduck.API.Services.Abstract.IGitHubDataServices">
            <summary>
            A service that queries GitHub.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Services.Abstract.IGitHubDataServices.GetTagAsync(System.String,System.Nullable{System.Int32})">
            <summary>
            Gets the specified tag, or the latest release tag if not specified.
            </summary>
            <param name="name">The name of the tag to retrieve.</param>
            <param name="id">The <c>Id</c> to optionally set the DTO with.</param>
        </member>
        <member name="M:Rubberduck.API.Services.Abstract.IGitHubDataServices.GetAllTagsAsync">
            <summary>
            Gets all tags, without their assets.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Rubberduck.API.Services.Abstract.IGitHubDataServices.GetCodeAnalysisDefaultsConfig">
            <summary>
            Gets the inspection types and severity overrides for each code inspection.
            </summary>
        </member>
        <member name="T:Rubberduck.API.Services.Abstract.IXmlDocServices">
            <summary>
            A service that orchestrates the synchronization of xmldoc content.
            </summary>
        </member>
        <member name="M:Rubberduck.API.Services.Abstract.IXmlDocServices.SynchronizeAsync">
            <summary>
            Gets the xmldoc assets from the latest release and prerelease tags, and processes/merges them into the database.
            </summary>
        </member>
    </members>
</doc>
