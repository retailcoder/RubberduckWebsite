@model RubberduckWebsite.Models.FeaturesViewModel
@{
    ViewData["Title"] = "Features";
}

<section>
    <h2>Rubberduck Features</h2>
    <p>All the IDE features you would have in a modern IDE... and then some!</p>
</section>

<section>
    <div class="card-deck">
    @{
        var features = Model.Features.Keys.OrderBy(f => f.SortOrder).ThenBy(f => f.Name).Select((f, i) => (Feature: f, Index: i)).GroupBy(e => e.Index / 2);
        @foreach (var row in features)
        {
        <div class="row">

            @foreach (var feature in row.Select(e => e.Feature))
            {
                <a class="card card-highlight m-2" asp-controller="Features" asp-action="Details" asp-all-route-data='new Dictionary<string, string> { ["name"] = feature.Name }'>
                    <div class="card-header">
                        <h4 class="card-title d-inline">
                            @feature.Title
                            @if (feature.IsNew)
                            {<span class="badge badge-primary">&nbsp;NEW!</span>}
                        </h4>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="m-2">
                                <div class="col-xs-6">
                                    <p>@feature.ElevatorPitch</p>
                                </div>
                                <div class="col-xs-6">
                                    <img class="card-img card-img-bottom img-thumbnail m-1" src="~/images/features/@(feature.Name).png" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <p class="card-text">Details »</p>
                    </div>
                </a>
            }
        </div>
        }
    }
    </div>
</section>